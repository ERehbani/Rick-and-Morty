{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./action-types\";\nconst initialState = {\n  myFavorites: [],\n  characters: [],\n  allCharactersFav: []\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: [...state.allCharactersFav, action.payload],\n        allCharactersFav: [...state.allCharactersFav, action.payload]\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(char => char.id !== action.payload)\n      };\n    // case ADD_CARD:\n    //     return {\n    //         ...state,\n    //         characters: [...state.characters, action.payload]\n    //     }\n\n    case FILTER:\n      const charactersFilteres = state.allCharactersFav.filter(char => char.gender === action.payload);\n      const filterCheck = () => {\n        if (action.payload === \"All\" && !charactersFilteres.length) return state.allCharactersFav;else return charactersFilteres;\n      };\n      return {\n        ...state,\n        myFavorites: filterCheck()\n      };\n    case ORDER:\n      const allCharatersFavCopy = [...state.allCharactersFav];\n      return {\n        ...state,\n        myFavorites: action.payload === \"A\" ? allCharatersFavCopy.sort((a, b) => a.id - b.id) : allCharatersFavCopy.sort((a, b) => b.id - a.id)\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","initialState","myFavorites","characters","allCharactersFav","reducer","state","arguments","length","undefined","action","type","payload","filter","char","id","charactersFilteres","gender","filterCheck","allCharatersFavCopy","sort","a","b"],"sources":["C:/Users/EliÃ¡n/Desktop/Rick-and-Morty/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./action-types\"\r\n\r\n    const initialState ={\r\n        myFavorites: [],\r\n        characters: [],\r\n        allCharactersFav: [],\r\n    }\r\n    \r\n    const reducer =(state=initialState, action)=>{\r\n        switch(action.type){\r\n            case ADD_FAV:\r\n                return {\r\n                    ...state,\r\n                    myFavorites: [...state.allCharactersFav, action.payload],\r\n                    allCharactersFav: [...state.allCharactersFav, action.payload]\r\n                }\r\n                case REMOVE_FAV:\r\n                    return {\r\n                        ...state,\r\n                        myFavorites: state.myFavorites.filter((char => char.id !== action.payload))\r\n                    }\r\n                    // case ADD_CARD:\r\n                    //     return {\r\n                    //         ...state,\r\n                    //         characters: [...state.characters, action.payload]\r\n                    //     }\r\n                        \r\n                    case FILTER:\r\n                        const charactersFilteres  = state.allCharactersFav.filter((char => char.gender === action.payload))\r\n                        const filterCheck =()=>{\r\n                            if(action.payload === \"All\" && !charactersFilteres.length) return state.allCharactersFav\r\n                            else return charactersFilteres\r\n                        }\r\n                        \r\n                        return {\r\n                            ...state,\r\n                            myFavorites: filterCheck()\r\n                        }\r\n                    case ORDER:\r\n                            const allCharatersFavCopy = [...state.allCharactersFav]\r\n                            \r\n                        return {\r\n                            ...state,\r\n                            myFavorites: action.payload ===\"A\" \r\n                            ? allCharatersFavCopy.sort((a, b) => a.id - b.id)\r\n                            : allCharatersFavCopy.sort((a, b) => b.id - a.id)\r\n                        }\r\n                        \r\n                    default:\r\n                        return {...state}\r\n                    }\r\n}\r\n\r\nexport default reducer;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,QAAQ,gBAAgB;AAE/D,MAAMC,YAAY,GAAE;EAChBC,WAAW,EAAE,EAAE;EACfC,UAAU,EAAE,EAAE;EACdC,gBAAgB,EAAE;AACtB,CAAC;AAED,MAAMC,OAAO,GAAE,SAAAA,CAAA,EAA8B;EAAA,IAA7BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtC,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKd,OAAO;MACR,OAAO;QACH,GAAGS,KAAK;QACRJ,WAAW,EAAE,CAAC,GAAGI,KAAK,CAACF,gBAAgB,EAAEM,MAAM,CAACE,OAAO,CAAC;QACxDR,gBAAgB,EAAE,CAAC,GAAGE,KAAK,CAACF,gBAAgB,EAAEM,MAAM,CAACE,OAAO;MAChE,CAAC;IACD,KAAKd,UAAU;MACX,OAAO;QACH,GAAGQ,KAAK;QACRJ,WAAW,EAAEI,KAAK,CAACJ,WAAW,CAACW,MAAM,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO;MAC7E,CAAC;IACD;IACA;IACA;IACA;IACA;;IAEA,KAAKb,MAAM;MACP,MAAMiB,kBAAkB,GAAIV,KAAK,CAACF,gBAAgB,CAACS,MAAM,CAAEC,IAAI,IAAIA,IAAI,CAACG,MAAM,KAAKP,MAAM,CAACE,OAAO,CAAE;MACnG,MAAMM,WAAW,GAAEA,CAAA,KAAI;QACnB,IAAGR,MAAM,CAACE,OAAO,KAAK,KAAK,IAAI,CAACI,kBAAkB,CAACR,MAAM,EAAE,OAAOF,KAAK,CAACF,gBAAgB,MACnF,OAAOY,kBAAkB;MAClC,CAAC;MAED,OAAO;QACH,GAAGV,KAAK;QACRJ,WAAW,EAAEgB,WAAW;MAC5B,CAAC;IACL,KAAKlB,KAAK;MACF,MAAMmB,mBAAmB,GAAG,CAAC,GAAGb,KAAK,CAACF,gBAAgB,CAAC;MAE3D,OAAO;QACH,GAAGE,KAAK;QACRJ,WAAW,EAAEQ,MAAM,CAACE,OAAO,KAAI,GAAG,GAChCO,mBAAmB,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACN,EAAE,GAAGO,CAAC,CAACP,EAAE,CAAC,GAC/CI,mBAAmB,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACP,EAAE,GAAGM,CAAC,CAACN,EAAE;MACpD,CAAC;IAEL;MACI,OAAO;QAAC,GAAGT;MAAK,CAAC;EAAA;AAEzC,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}